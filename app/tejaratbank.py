#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
from bs4 import BeautifulSoup
import re
from .models import Currency, Bank, CurrencyExchangeRate
import logging

logger = logging.getLogger(__name__)


def save_currency_data(currency_code, buy_rate, sell_rate, bank_name):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–∞—è –≤–∞–ª—é—Ç–∞ –≤ –±–∞–∑–µ
    currency, created = Currency.objects.get_or_create(code=currency_code)

    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –±–∞–Ω–∫
    bank, created = Bank.objects.get_or_create(name=bank_name)

    # –°–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å –æ –∫—É—Ä—Å–µ –≤–∞–ª—é—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –±–∞–Ω–∫–∞
    CurrencyExchangeRate.objects.create(
        bank=bank,
        currency=currency,
        buy=buy_rate,
        sell=sell_rate
    )


def fetch_currency_data_tejaratbank():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç —Å —Å–∞–π—Ç–∞ –¢–µ—á–∞—Ä–∞—Ç –ë–∞–Ω–∫–∞"""
    url = "https://tejaratbank.tj/"

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        }
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()

        # –ü–∞—Ä—Å–∏–º HTML
        soup = BeautifulSoup(response.text, 'html.parser')

        # –ò—â–µ–º –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç
        rates = {}

        # –ò—â–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
        headings = soup.find_all('div', class_='elementor-heading-title')

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞—Ç—É
        date = None
        for heading in headings:
            text = heading.get_text().strip()
            if '–∫—É—Ä—Å –≤–∞–ª—é—Ç –Ω–∞' in text:
                date_match = re.search(r'(\d{2}\.\d{2}\.\d{4})', text)
                if date_match:
                    date = date_match.group(1)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫—É—Ä—Å—ã
        for i, heading in enumerate(headings):
            text = heading.get_text().strip()

            if text in ['USD', 'EURO', 'RUB']:
                try:
                    # –°–ª–µ–¥—É—é—â–∏–µ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫—É—Ä—Å—ã
                    buy_rate = float(headings[i + 1].get_text().strip())
                    sell_rate = float(headings[i + 2].get_text().strip())

                    rates[text] = {
                        'buy': buy_rate,
                        'sell': sell_rate
                    }
                except (IndexError, ValueError):
                    continue

        return rates

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Tejaratbank: {e}")
        return {}


def fetch_and_save_currency_data_tejaratbank():
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –¢–µ—á–∞—Ä–∞—Ç –ë–∞–Ω–∫–∞
    logger.info("–ù–∞—á–∏–Ω–∞—é –ø–∞—Ä—Å–∏—Ç—å Tejaratbank")
    data = fetch_currency_data_tejaratbank()
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Tejaratbank: {data}")

    if data:
        # –ü—Ä–∏–º–µ—Ä: –ø–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å—ã –¥–ª—è USD, EUR –∏ RUB
        if 'USD' in data:
            usd_data = data['USD']
            print(f"[DEBUG] USD -> –ü–æ–∫—É–ø–∫–∞: {usd_data['buy']}, –ü—Ä–æ–¥–∞–∂–∞: {usd_data['sell']}")
            save_currency_data('USD', usd_data['buy'], usd_data['sell'], 'Tejaratbank')

        if 'EURO' in data:
            euro_data = data['EURO']
            print(f"[DEBUG] EUR -> –ü–æ–∫—É–ø–∫–∞: {euro_data['buy']}, –ü—Ä–æ–¥–∞–∂–∞: {euro_data['sell']}")
            save_currency_data('EUR', euro_data['buy'], euro_data['sell'], 'Tejaratbank')

        if 'RUB' in data:
            rub_data = data['RUB']
            print(f"[DEBUG] RUB -> –ü–æ–∫—É–ø–∫–∞: {rub_data['buy']}, –ü—Ä–æ–¥–∞–∂–∞: {rub_data['sell']}")
            save_currency_data('RUB', rub_data['buy'], rub_data['sell'], 'Tejaratbank')

        print("[‚úì] –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–ª—è Tejaratbank.")
    else:
        print("[!] –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç Tejaratbank.")

    logger.info("–ü–∞—Ä—Å–∏–Ω–≥ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ Tejaratbank –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    return data


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
def format_rates(data):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫—É—Ä—Å—ã –¥–ª—è –≤—ã–≤–æ–¥–∞"""
    if not data:
        return "‚ùå –û—à–∏–±–∫–∞: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"

    result = "üè¶ –¢–µ—á–∞—Ä–∞—Ç –ë–∞–Ω–∫\n"
    result += "\nüí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç:\n"

    currency_names = {
        'USD': '–î–æ–ª–ª–∞—Ä –°–®–ê',
        'EURO': '–ï–≤—Ä–æ',
        'RUB': '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å'
    }

    for currency, rates in data.items():
        name = currency_names.get(currency, currency)
        result += f"\n{name} ({currency}):\n"
        result += f"  üí∞ –ü–æ–∫—É–ø–∫–∞: {rates['buy']}\n"
        result += f"  üí∏ –ü—Ä–æ–¥–∞–∂–∞: {rates['sell']}\n"

    return result


# –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    print("üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç...")
    data = fetch_currency_data_tejaratbank()
    print(format_rates(data))
    # fetch_and_save_currency_data_tejaratbank()  # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î