// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–æ—Ä–æ–¥–∞–º–∏
// frontend/src/services/cities.js

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–æ–≤ –∫–∞–∫ fallback (—Å–æ–≤–ø–∞–¥–∞—é—Ç —Å cities.json)
const CITIES_DATA = [
  {
    id: 1,
    name: "–î—É—à–∞–Ω–±–µ",
    name_en: "Dushanbe",
    region: "–î—É—à–∞–Ω–±–µ",
    is_active: true
  },
  {
    id: 2,
    name: "–•—É–¥–∂–∞–Ω–¥",
    name_en: "Khujand",
    region: "–°–æ–≥–¥–∏–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    is_active: true
  },
  {
    id: 3,
    name: "–ò—Å—Ç–∞—Ä–∞–≤—à–∞–Ω",
    name_en: "Istaravshan",
    region: "–°–æ–≥–¥–∏–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    is_active: true
  },
  {
    id: 4,
    name: "–ö—É–ª—è–±",
    name_en: "Kulob",
    region: "–•–∞—Ç–ª–æ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    is_active: true
  },
  {
    id: 5,
    name: "–ö—É—Ä–≥–∞–Ω-–¢—é–±–µ",
    name_en: "Qurghonteppa",
    region: "–•–∞—Ç–ª–æ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    is_active: true
  },
  {
    id: 6,
    name: "–¢—É—Ä—Å—É–Ω–∑–∞–¥–µ",
    name_en: "Tursunzoda",
    region: "–†–∞–π–æ–Ω—ã —Ä–µ—Å–ø—É–±–ª–∏–∫–∞–Ω—Å–∫–æ–≥–æ –ø–æ–¥—á–∏–Ω–µ–Ω–∏—è",
    is_active: true
  },
  {
    id: 7,
    name: "–ö–∞–Ω–∏–±–∞–¥–∞–º",
    name_en: "Kanibadam",
    region: "–°–æ–≥–¥–∏–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    is_active: true
  },
  {
    id: 8,
    name: "–ü–µ–Ω–¥–∂–∏–∫–µ–Ω—Ç",
    name_en: "Panjakent",
    region: "–°–æ–≥–¥–∏–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    is_active: true
  },
  {
    id: 9,
    name: "–•–æ—Ä–æ–≥",
    name_en: "Khorog",
    region: "–ì–æ—Ä–Ω–æ-–ë–∞–¥–∞—Ö—à–∞–Ω—Å–∫–∞—è –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è –æ–±–ª–∞—Å—Ç—å",
    is_active: true
  },
  {
    id: 10,
    name: "–í–∞—Ö–¥–∞—Ç",
    name_en: "Vahdat",
    region: "–†–∞–π–æ–Ω—ã —Ä–µ—Å–ø—É–±–ª–∏–∫–∞–Ω—Å–∫–æ–≥–æ –ø–æ–¥—á–∏–Ω–µ–Ω–∏—è",
    is_active: true
  }
];

// –ö—ç—à –¥–ª—è –≥–æ—Ä–æ–¥–æ–≤
let cachedCities = null;

// –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–∞
async function loadCitiesFromJSON() {
  try {
    console.log('üèôÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–∞...');
    const response = await fetch('/cities.json');

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();
    console.log('‚úÖ JSON –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', data);

    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    let cities;
    if (Array.isArray(data)) {
      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –º–∞—Å—Å–∏–≤
      cities = data;
    } else if (data.cities && Array.isArray(data.cities)) {
      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –æ–±—ä–µ–∫—Ç–µ —Å –∫–ª—é—á–æ–º "cities"
      cities = data.cities;
    } else {
      throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö: –æ–∂–∏–¥–∞–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ –∏–ª–∏ –æ–±—ä–µ–∫—Ç —Å –∫–ª—é—á–æ–º "cities"');
    }

    console.log('‚úÖ –ì–æ—Ä–æ–¥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ JSON —Ñ–∞–π–ª–∞:', cities.length);

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
    return cities.filter(city => city.is_active);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ JSON:', error);
    console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ fallback');

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ fallback
    return CITIES_DATA.filter(city => city.is_active);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
export const citiesService = {
  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≥–æ—Ä–æ–¥–∞ (—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º)
  async getAllCities() {
    if (!cachedCities) {
      cachedCities = await loadCitiesFromJSON();
    }
    return cachedCities;
  },

  // –ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ–¥ –ø–æ ID
  async getCityById(id) {
    const cities = await this.getAllCities();
    const city = cities.find(city => city.id === parseInt(id));
    return city || null;
  },

  // –ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ–¥–∞ –ø–æ —Ä–µ–≥–∏–æ–Ω—É
  async getCitiesByRegion(region) {
    const cities = await this.getAllCities();
    return cities.filter(city => city.region === region);
  },

  // –ü–æ–∏—Å–∫ –≥–æ—Ä–æ–¥–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
  async searchCities(query) {
    const cities = await this.getAllCities();
    const searchTerm = query.toLowerCase();

    return cities.filter(city =>
      city.name.toLowerCase().includes(searchTerm) ||
      (city.name_en && city.name_en.toLowerCase().includes(searchTerm))
    );
  },

  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã
  async getRegions() {
    const cities = await this.getAllCities();
    const regions = [...new Set(cities.map(city => city.region))];
    return regions.filter(region => region); // –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Ä–µ–≥–∏–æ–Ω—ã
  },

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–æ—Ä–æ–¥–∞ (–æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à)
  async reloadCities() {
    cachedCities = null;
    return await this.getAllCities();
  }
};

// –¢–∞–∫–∂–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–∫ default –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export default citiesService;