# -------- Stage 1: Production Build --------
FROM node:18 AS builder

WORKDIR /app

# Копируем package.json для кэширования зависимостей
COPY frontend/package*.json ./

# Устанавливаем зависимости
RUN npm ci --only=production

# Копируем исходный код
COPY frontend/ ./

# Собираем production build
RUN npm run build

# -------- Stage 2: Production (Nginx) --------
FROM nginx:stable-alpine AS prod

# Копируем собранные файлы
COPY --from=builder /app/dist /usr/share/nginx/html

# Копируем nginx конфиг для SPA
COPY nginx/frontend.conf /etc/nginx/conf.d/default.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]

# -------- Stage 3: Development (Vite Dev Server) --------
FROM node:18 AS dev

WORKDIR /app

# Устанавливаем системные зависимости
RUN apt-get update && apt-get install -y python3 make g++ && rm -rf /var/lib/apt/lists/*

# Копируем package.json
COPY frontend/package*.json ./

# Очищаем npm cache и устанавливаем зависимости
RUN npm cache clean --force
RUN npm install

# Устанавливаем глобально vite для отладки
RUN npm install -g vite

# Копируем исходники
COPY frontend/ ./

# Порт Vite dev server
EXPOSE 8080

# Увеличиваем память для Node.js и добавляем отладку
ENV NODE_OPTIONS="--max-old-space-size=4096"
ENV DEBUG="vite:*"

# Запускаем dev server с дополнительными флагами
CMD ["npm", "run", "dev", "--", "--force", "--clearScreen", "false"]